@page "/gestioninventario"
@inject HttpClient Http
@using System.Net.Http.Json

<div class="inventario-container">
    <!-- Encabezado principal -->
    <header class="app-header">
        <div class="header-title">
            <h1>LECTORALES</h1>
            <h2>PRODUCCIÓN - INVENTARIO</h2>
        </div>
        <div class="header-admin">
            <h3>Administrador</h3>
        </div>
    </header>

    <!-- Sección de categorías -->
    <section class="categories-section">
        <div class="section-header">
            <h3>Categorías de inventario</h3>
            <div class="category-tags">
                <span class="tag">Proveedores</span>
                <span class="tag">Tipos recolectivos</span>
            </div>
        </div>

        <div class="section-header">
            <h3>ALIMENTOS</h3>
            <div class="category-tags">
                <span class="tag">BEBIDAS</span>
                <span class="tag">BEBIDAS ALCOHÓLICAS</span>
                <span class="tag">CUIDADO PERSONAL</span>
                <span class="tag">ELECTRÓNICA</span>
                <span class="tag">FARMACIA</span>
            </div>
        </div>
    </section>

    <!-- Sección de productos -->
    <section class="products-section">
        <div class="products-header">
            <h3>Lista de Productos</h3>
            <div class="products-controls">
                <div class="search-box">
                    <input type="text" placeholder="Buscar producto..." />
                    <button class="search-button">🔍</button>
                </div>
                <button class="add-button" @onclick="ShowAddForm">+ Agregar Producto</button>
            </div>
        </div>

        <!-- Tabla de productos -->
        <div class="products-table">
            <table>
                <thead>
                    <tr>
                        <th>Código</th>
                        <th>Descripción</th>
                        <th>Cantidad</th>
                        <th>Costo</th>
                        <th>Precio</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (productos != null && productos.Any())
                    {
                        @foreach (var p in productos)
                        {
                            <tr>
                                <td>@p.codigoProducto</td>
                                <td>
                                    <div class="product-name">@p.descripcion</div>
                                    @if (!string.IsNullOrEmpty(p.detalle))
                                    {
                                        <div class="product-detail">@p.detalle</div>
                                    }
                                </td>
                                <td>@p.cantidad</td>
                                <td>C$@p.costo.ToString("N2")</td>
                                <td>C$@((p.costo * 1.30m).ToString("N2"))</td>
                                <td>
                                    <button class="action-btn edit-btn">✓</button>
                                    <button class="action-btn sleep-btn">💤</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6">Cargando productos...</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </section>

    <!-- Formulario para agregar producto (oculto por defecto) -->
    @if (showAddForm)
    {
        <div class="add-product-form">
            <div class="form-header">
                <h3>Agregar Nuevo Producto</h3>
                <button class="close-btn" @onclick="HideAddForm">×</button>
            </div>
            <div class="form-body">
                <div class="form-row">
                    <div class="form-group">
                        <label>Descripción:</label>
                        <input type="text" @bind="nuevoProducto.descripcion" />
                    </div>
                    <div class="form-group">
                        <label>Detalle:</label>
                        <input type="text" @bind="nuevoProducto.detalle" />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Cantidad:</label>
                        <input type="number" @bind="nuevoProducto.cantidad" />
                    </div>
                    <div class="form-group">
                        <label>Costo:</label>
                        <input type="number" step="0.01" @bind="nuevoProducto.costo" />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Categoría:</label>
                        <select @bind="nuevoProducto.categoria">
                            <option value="">Seleccione...</option>
                            <option value="BEBIDAS">BEBIDAS</option>
                            <option value="BEBIDAS ALCOHÓLICAS">BEBIDAS ALCOHÓLICAS</option>
                            <option value="CUIDADO PERSONAL">CUIDADO PERSONAL</option>
                            <option value="ELECTRÓNICA">ELECTRÓNICA</option>
                            <option value="FARMACIA">FARMACIA</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Bodega:</label>
                        <input type="text" @bind="nuevoProducto.bodega" />
                    </div>
                </div>


                <div class="form-group">
                    <label>IdProveedor:</label>
                    <input type="text" @bind="nuevoProducto.idProveedor" />
                </div>
            </div>

                <div class="form-actions">
                    <button class="save-btn" @onclick="AgregarProducto">Guardar</button>
                    <button class="cancel-btn" @onclick="HideAddForm">Cancelar</button>
                </div>
            </div>
       
    }

    <!-- Mensajes de estado -->
    @if (!string.IsNullOrEmpty(mensaje))
    {
        <div class="status-message @(mensaje.Contains("✅") ? "success" : "error")">
            @mensaje
        </div>
    }
</div>

<style>
    /* Variables de color */
    :root {
        --primary-color: #D32F2F; /* Rojo principal */
        --secondary-color: #1976D2; /* Azul */
        --dark-color: #333333;
        --light-color: #FFFFFF;
        --gray-light: #F5F5F5;
        --gray-medium: #E0E0E0;
        --gray-dark: #757575;
        --success-color: #4CAF50;
        --error-color: #F44336;
    }

    /* Estilos generales */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
        background-color: #FAFAFA;
    }

    .inventario-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Encabezado */
    .app-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        border-bottom: 2px solid var(--gray-medium);
    }

    .header-title h1 {
        color: var(--primary-color);
        font-size: 28px;
        font-weight: bold;
    }

    .header-title h2 {
        color: var(--dark-color);
        font-size: 18px;
        font-weight: normal;
    }

    .header-admin h3 {
        color: var(--secondary-color);
        font-size: 20px;
        font-weight: bold;
    }

    /* Sección de categorías */
    .categories-section {
        margin-bottom: 30px;
    }

    .section-header {
        margin-bottom: 20px;
    }

        .section-header h3 {
            color: var(--dark-color);
            font-size: 18px;
            margin-bottom: 10px;
            padding-bottom: 5px;
            border-bottom: 1px solid var(--gray-medium);
        }

    .category-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .tag {
        background-color: var(--gray-light);
        color: var(--dark-color);
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 14px;
    }

    /* Sección de productos */
    .products-section {
        background-color: var(--light-color);
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .products-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background-color: var(--secondary-color);
        color: var(--light-color);
    }

        .products-header h3 {
            font-size: 18px;
        }

    .products-controls {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .search-box {
        display: flex;
        align-items: center;
    }

        .search-box input {
            padding: 8px 15px;
            border: 1px solid var(--gray-medium);
            border-radius: 4px 0 0 4px;
            width: 250px;
        }

    .search-button {
        padding: 8px 15px;
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 0 4px 4px 0;
        cursor: pointer;
    }

    .add-button {
        padding: 8px 15px;
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
    }

    /* Tabla de productos */
    .products-table {
        padding: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid var(--gray-medium);
    }

    th {
        background-color: var(--gray-light);
        font-weight: bold;
        color: var(--dark-color);
    }

    tr:hover {
        background-color: var(--gray-light);
    }

    .product-name {
        font-weight: bold;
    }

    .product-detail {
        color: var(--gray-dark);
        font-size: 13px;
        margin-top: 3px;
    }

    .action-btn {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 16px;
        margin: 0 5px;
    }

    .edit-btn {
        color: var(--success-color);
    }

    .sleep-btn {
        color: var(--secondary-color);
    }

    /* Formulario para agregar producto */
    .add-product-form {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: var(--light-color);
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        width: 600px;
        z-index: 1000;
    }

    .form-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background-color: var(--secondary-color);
        color: var(--light-color);
        border-radius: 8px 8px 0 0;
    }

        .form-header h3 {
            font-size: 18px;
        }

    .close-btn {
        background: none;
        border: none;
        color: var(--light-color);
        font-size: 24px;
        cursor: pointer;
        line-height: 1;
    }

    .form-body {
        padding: 20px;
    }

    .form-row {
        display: flex;
        gap: 20px;
        margin-bottom: 15px;
    }

    .form-group {
        flex: 1;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: var(--dark-color);
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid var(--gray-medium);
            border-radius: 4px;
        }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .save-btn {
        padding: 8px 20px;
        background-color: var(--success-color);
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .cancel-btn {
        padding: 8px 20px;
        background-color: var(--gray-medium);
        color: var(--dark-color);
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    /* Mensajes de estado */
    .status-message {
        position: fixed;
        bottom: 20px;
        right: 20px;
        padding: 15px 20px;
        border-radius: 4px;
        color: white;
        font-weight: bold;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        animation: slideIn 0.3s ease-out;
    }

    .success {
        background-color: var(--success-color);
    }

    .error {
        background-color: var(--error-color);
    }

    @@keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    /* Fondo semitransparente cuando el formulario está abierto */
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }
</style>

@code {
    List<Producto> productos = new();
    Producto nuevoProducto = new();
    string mensaje;
    bool showAddForm = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarProductos();
    }

    async Task CargarProductos()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<Producto>>("api/Producto/GetAllProductos");
            if (response is not null)
            {
                productos = response;
            }
        }
        catch (Exception ex)
        {
            mensaje = "❌ Error al cargar productos: " + ex.Message;
        }
    }

    private void ShowAddForm()
    {
        showAddForm = true;
    }

    private void HideAddForm()
    {
        showAddForm = false;
        nuevoProducto = new Producto();
    }

    private async Task AgregarProducto()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Producto/registrar-producto", nuevoProducto);
            if (response.IsSuccessStatusCode)
            {
                mensaje = "✅ Producto añadido con éxito";
                nuevoProducto = new Producto();
                await CargarProductos();
                HideAddForm();
            }
            else
            {
                mensaje = "❌ Error al añadir: " + await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            mensaje = "❌ Error: " + ex.Message;
        }
    }

    public class Producto
    {
        public int codigoProducto { get; set; }
        public string descripcion { get; set; }
        public string detalle { get; set; }
        public int cantidad { get; set; }
        public string categoria { get; set; }
        public decimal costo { get; set; }
        public string bodega { get; set; }
        public int idProveedor { get; set; }
    }
}